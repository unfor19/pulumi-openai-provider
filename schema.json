{
    "name": "openai",
    "displayName": "OpenAI",
    "description": "A Pulumi provider for managing OpenAI resources.",
    "publisher": "Pulumi",
    "keywords": [
        "pulumi",
        "openai",
        "ai",
        "assistant",
        "vector-store",
        "category/ai"
    ],
    "config": {
        "variables": {
            "apiKey": {
                "type": "string",
                "description": "The OpenAI API key.",
                "secret": true
            }
        },
        "required": [
            "apiKey"
        ]
    },
    "resources": {
        "openai:index:Assistant": {
            "isComponent": false,
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the assistant."
                },
                "instructions": {
                    "type": "string",
                    "description": "The system instructions that the assistant uses."
                },
                "model": {
                    "type": "string",
                    "description": "The model that the assistant will use (e.g., gpt-4, gpt-3.5-turbo)."
                },
                "tools": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": "The type of tool (e.g., code_interpreter, retrieval, function)."
                            }
                        }
                    },
                    "description": "A list of tools enabled on the assistant."
                },
                "fileIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of file IDs attached to this assistant."
                },
                "toolResources": {
                    "type": "object",
                    "properties": {
                        "codeInterpreter": {
                            "type": "object",
                            "properties": {
                                "fileIds": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "File IDs for the code interpreter"
                                }
                            }
                        },
                        "fileSearch": {
                            "type": "object",
                            "properties": {
                                "vectorStoreIds": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "Vector store IDs for the file search"
                                }
                            }
                        }
                    },
                    "description": "Tool resources for the assistant"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that can be used to store additional information about the assistant."
                },
                "temperature": {
                    "type": "number",
                    "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic."
                },
                "topP": {
                    "type": "number",
                    "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered."
                },
                "responseFormat": {
                    "type": "string",
                    "description": "The format of the response. Can be 'auto' or 'json_object'."
                },
                "apiKey": {
                    "type": "string",
                    "description": "Optional OpenAI API key to use for this specific resource.",
                    "secret": true
                }
            },
            "requiredInputs": [
                "name",
                "model"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique identifier for the assistant."
                },
                "createdAt": {
                    "type": "number",
                    "description": "The Unix timestamp (in seconds) for when the assistant was created."
                },
                "object": {
                    "type": "string",
                    "description": "The object type, which is always 'assistant'."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the assistant."
                },
                "instructions": {
                    "type": "string",
                    "description": "The system instructions that the assistant uses."
                },
                "model": {
                    "type": "string",
                    "description": "The model that the assistant uses."
                },
                "tools": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": "The type of tool."
                            }
                        }
                    },
                    "description": "A list of tools enabled on the assistant."
                },
                "fileIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of file IDs attached to this assistant."
                },
                "toolResources": {
                    "type": "object",
                    "properties": {
                        "codeInterpreter": {
                            "type": "object",
                            "properties": {
                                "fileIds": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "File IDs for the code interpreter"
                                }
                            }
                        },
                        "fileSearch": {
                            "type": "object",
                            "properties": {
                                "vectorStoreIds": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "Vector store IDs for the file search"
                                }
                            }
                        }
                    },
                    "description": "Tool resources for the assistant"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that can be used to store additional information about the assistant."
                },
                "temperature": {
                    "type": "number",
                    "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic."
                },
                "topP": {
                    "type": "number",
                    "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered."
                },
                "responseFormat": {
                    "type": "string",
                    "description": "The format of the response. Can be 'auto' or 'json_object'."
                },
                "apiKey": {
                    "type": "string",
                    "description": "Optional OpenAI API key used for this specific resource.",
                    "secret": true
                }
            },
            "required": [
                "id",
                "createdAt",
                "object",
                "name",
                "model"
            ]
        },
        "openai:index:VectorStore": {
            "isComponent": false,
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the vector store."
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that can be used to store additional information about the vector store."
                },
                "fileIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of file IDs to be used in the vector store."
                },
                "expiresAfter": {
                    "type": "object",
                    "properties": {
                        "anchor": {
                            "type": "string",
                            "description": "The anchor point for the expiration time. Currently only 'last_active_at' is supported."
                        },
                        "days": {
                            "type": "number",
                            "description": "The number of days after which the vector store will expire."
                        }
                    },
                    "required": [
                        "anchor",
                        "days"
                    ],
                    "description": "The expiration policy for the vector store."
                },
                "chunkingStrategy": {
                    "type": "object",
                    "description": "The chunking strategy used to chunk files."
                },
                "apiKey": {
                    "type": "string",
                    "description": "Optional OpenAI API key to use for this specific resource.",
                    "secret": true
                }
            },
            "requiredInputs": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique identifier for the vector store."
                },
                "createdAt": {
                    "type": "number",
                    "description": "The Unix timestamp (in seconds) for when the vector store was created."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the vector store."
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that can be used to store additional information about the vector store."
                },
                "fileIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of file IDs used in the vector store."
                },
                "expiresAfter": {
                    "type": "object",
                    "properties": {
                        "anchor": {
                            "type": "string",
                            "description": "The anchor point for the expiration time. Currently only 'last_active_at' is supported."
                        },
                        "days": {
                            "type": "number",
                            "description": "The number of days after which the vector store will expire."
                        }
                    },
                    "description": "The expiration policy for the vector store."
                },
                "expiresAt": {
                    "type": "number",
                    "description": "The Unix timestamp (in seconds) for when the vector store will expire."
                },
                "lastActiveAt": {
                    "type": "number",
                    "description": "The Unix timestamp (in seconds) for when the vector store was last active."
                },
                "status": {
                    "type": "string",
                    "description": "The status of the vector store (e.g., 'completed', 'in_progress')."
                },
                "object": {
                    "type": "string",
                    "description": "The object type, which is always 'vector_store'."
                },
                "usageBytes": {
                    "type": "number",
                    "description": "The number of bytes used by the vector store."
                },
                "fileCounts": {
                    "type": "object",
                    "properties": {
                        "total": {
                            "type": "number",
                            "description": "The total number of files in the vector store."
                        },
                        "completed": {
                            "type": "number",
                            "description": "The number of files that have been successfully processed."
                        },
                        "inProgress": {
                            "type": "number",
                            "description": "The number of files that are currently being processed."
                        },
                        "failed": {
                            "type": "number",
                            "description": "The number of files that failed to process."
                        },
                        "cancelled": {
                            "type": "number",
                            "description": "The number of files that were cancelled during processing."
                        }
                    },
                    "description": "Counts of files in the vector store by status."
                },
                "fileCountCancelled": {
                    "type": "number",
                    "description": "The number of cancelled files in this vector store."
                },
                "apiKey": {
                    "type": "string",
                    "description": "Optional OpenAI API key used for this specific resource.",
                    "secret": true
                }
            },
            "required": [
                "id",
                "createdAt",
                "name",
                "status",
                "object"
            ]
        },
        "openai:index:Project": {
            "description": "An OpenAI Project resource. Projects allow you to organize your work in the OpenAI platform. NOTE: The OpenAI Projects API requires an API key with the 'api.management.write' scope, which is typically only available to organization administrators or API keys with specific permissions.",
            "isComponent": false,
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the project."
                },
                "apiKey": {
                    "type": "string",
                    "description": "Optional OpenAI API key to use for this specific resource.",
                    "secret": true
                }
            },
            "requiredInputs": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique identifier for the project."
                },
                "createdAt": {
                    "type": "number",
                    "description": "The Unix timestamp (in seconds) for when the project was created."
                },
                "object": {
                    "type": "string",
                    "description": "The object type, which is always 'organization.project'."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the project."
                },
                "status": {
                    "type": "string",
                    "description": "The status of the project (e.g., 'active')."
                },
                "archivedAt": {
                    "type": "number",
                    "description": "The Unix timestamp (in seconds) for when the project was archived, or null if not archived."
                },
                "apiKey": {
                    "type": "string",
                    "description": "Optional OpenAI API key used for this specific resource.",
                    "secret": true
                }
            },
            "required": [
                "id",
                "createdAt",
                "object",
                "name",
                "status"
            ]
        }
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "respectSchemaVersion": true
        },
        "go": {
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-openai/sdk/go/openai",
            "respectSchemaVersion": true
        },
        "nodejs": {
            "dependencies": {
                "openai": "^4.0.0"
            },
            "devDependencies": {
                "typescript": "^4.6.3"
            },
            "respectSchemaVersion": true
        },
        "python": {
            "requires": {
                "pulumi": ">=3.0.0,<4.0.0",
                "openai": ">=1.0.0,<2.0.0"
            },
            "respectSchemaVersion": true
        }
    }
}